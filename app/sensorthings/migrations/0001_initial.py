# Generated by Django 5.2.5 on 2025-08-21 19:47

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import django_lifecycle.mixins
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('feature', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FeatureType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ObservedProperty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'ObservedProperties',
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PreparationProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RelationRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('inverse_name', models.TextField(blank=True, null=True)),
                ('inverse_definition', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sampler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('sampler_type', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SamplingProcedure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('metadata', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Datastream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('result_type', models.JSONField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('phenomenon_time_start', models.DateTimeField(blank=True, null=True)),
                ('phenomenon_time_end', models.DateTimeField(blank=True, null=True)),
                ('result_time_start', models.DateTimeField(blank=True, null=True)),
                ('result_time_end', models.DateTimeField(blank=True, null=True)),
                ('observed_area', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('proximate_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='datastreams_proximate_feature_set', to='sensorthings.feature')),
                ('ultimate_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.feature')),
                ('sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.sensor')),
                ('thing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.thing')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('phenomenon_time_start', models.DateTimeField(blank=True, null=True)),
                ('phenomenon_time_end', models.DateTimeField(blank=True, null=True)),
                ('result_time', models.DateTimeField(blank=True, null=True)),
                ('valid_time_start', models.DateTimeField(blank=True, null=True)),
                ('valid_time_end', models.DateTimeField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('result_type', models.SmallIntegerField(blank=True, null=True)),
                ('result_number', models.FloatField(blank=True, null=True)),
                ('result_boolean', models.BooleanField(blank=True, null=True)),
                ('result_json', models.JSONField(blank=True, null=True)),
                ('result_string', models.TextField(blank=True, null=True)),
                ('datastream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.datastream')),
                ('feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.feature')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PreparationStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.feature')),
                ('preparation_procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.preparationprocedure')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RelatedObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('external_target', models.TextField(blank=True, null=True)),
                ('source_observation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.observation')),
                ('target_observation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relatedobservations_target_observation_set', to='sensorthings.observation')),
                ('relation_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.relationrole')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RelatedFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('external_target', models.TextField(blank=True, null=True)),
                ('source_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.feature')),
                ('target_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relatedfeatures_target_feature_set', to='sensorthings.feature')),
                ('relation_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.relationrole')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='RelatedDatastream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('external_target', models.TextField(blank=True, null=True)),
                ('source_datastream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.datastream')),
                ('target_datastream', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relateddatastreams_target_datastream_set', to='sensorthings.datastream')),
                ('relation_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.relationrole')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Sampling',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('definition', models.TextField(blank=True, null=True)),
                ('encoding_type', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('geom', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('properties', models.JSONField(blank=True, null=True)),
                ('sampling_time_start', models.DateTimeField(blank=True, null=True)),
                ('sampling_time_end', models.DateTimeField(blank=True, null=True)),
                ('sampled_feature', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.feature')),
                ('sampler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.sampler')),
                ('procedure', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.samplingprocedure')),
                ('thing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.thing')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='feature',
            name='creator_sampling',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.sampling'),
        ),
        migrations.CreateModel(
            name='RelatedThing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('external_target', models.TextField(blank=True, null=True)),
                ('relation_role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.relationrole')),
                ('source_thing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.thing')),
                ('target_thing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='relatedthings_target_thing_set', to='sensorthings.thing')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='HistLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('private', models.BooleanField(blank=True, default=False)),
                ('uid', models.TextField(blank=True, null=True)),
                ('domain', models.CharField(blank=True, max_length=256, null=True)),
                ('namespace', models.CharField(blank=True, max_length=256, null=True)),
                ('category', models.CharField(blank=True, max_length=256, null=True)),
                ('label', models.CharField(blank=True, max_length=256, null=True)),
                ('tag', models.CharField(blank=True, max_length=256, null=True)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('thing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='sensorthings.thing')),
            ],
            options={
                'abstract': False,
            },
            bases=(django_lifecycle.mixins.LifecycleModelMixin, models.Model),
        ),
    ]
